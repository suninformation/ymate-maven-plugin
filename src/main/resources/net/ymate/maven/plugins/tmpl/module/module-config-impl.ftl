package ${packageName}.impl;

import ${packageName}.I${moduleName?cap_first};
import ${packageName}.I${moduleName?cap_first}Config;
import net.ymate.platform.core.configuration.IConfigReader;
import net.ymate.platform.core.module.IModuleConfigurer;

/**
 * Default${moduleName?cap_first}Config generated By ModuleMojo on ${.now?string("yyyy/MM/dd HH:mm")}
 *
 * @author YMP (https://www.ymate.net/)
 */
public class Default${moduleName?cap_first}Config implements I${moduleName?cap_first}Config {

    private boolean enabled = true;

    private boolean initialized;

    public static Default${moduleName?cap_first}Config defaultConfig() {
        return builder().build();
    }

    public static Default${moduleName?cap_first}Config create(IModuleConfigurer moduleConfigurer) {
        return new Default${moduleName?cap_first}Config(moduleConfigurer);
    }

    public static Builder builder() {
        return new Builder();
    }

    private Default${moduleName?cap_first}Config() {
    }

    private Default${moduleName?cap_first}Config(IModuleConfigurer moduleConfigurer) {
        IConfigReader configReader = moduleConfigurer.getConfigReader();
        //
        enabled = configReader.getBoolean(ENABLED, true);
        //
        // TODO What to do?
    }

    @Override
    public void initialize(I${moduleName?cap_first} owner) throws Exception {
        if (!initialized) {
            if (enabled) {
                // TOD What to do?
            }
            initialized = true;
        }
    }

    @Override
    public boolean isInitialized() {
        return initialized;
    }

    @Override
    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        if (!initialized) {
            this.enabled = enabled;
        }
    }

    public static final class Builder {

        private final Default${moduleName?cap_first}Config config = new Default${moduleName?cap_first}Config();

        private Builder() {
        }

        public Builder enabled(boolean enabled) {
            config.setEnabled(enabled);
            return this;
        }

        public Default${moduleName?cap_first}Config build() {
            return config;
        }
    }
}